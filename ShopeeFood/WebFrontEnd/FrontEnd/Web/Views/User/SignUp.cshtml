@model BusinessLogicLayerFront.DTOs.UserDto

@{
    ViewData["Title"] = "SignUp";
    Layout = "~/Views/Shared/_LayoutProject.cshtml";
}

<style>
    body {
        background-color: #f8f9fa;
        font-family: Arial, sans-serif;
    }

    .sign-up-container {
        max-width: 600px;
        margin: 50px auto;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 10px;
        background-color: #fff;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    #sign-up-form {
        padding: 0 20px;
    }

    .radio-group {
        display: flex;
        gap: 20px;
        align-items: center;
    }

    .btn-sign-up {
        margin: 30px 0;
    }

        .btn-sign-up input {
            width: 100%;
        }

    h1 {
        color: #28a745;
        text-align: center;
        margin-bottom: 20px;
    }

    .form-group {
        margin-bottom: 15px;
        margin-right: auto;
    }

    .control-label {
        margin-bottom: 5px;
    }

    .text-danger {
        font-size: 0.875em;
    }

    .form-control {
        border-radius: 5px;
    }

    .login-link {
        display: block;
        text-align: center;
        margin-top: 15px;
    }
</style>

<div class="sign-up-container">
    <form asp-action="SignUp" id="sign-up-form">
        <h1>Sign Up</h1>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label class="control-label">Full name</label>
            <input asp-for="FullName" class="form-control" />
            <span asp-validation-for="FullName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label class="control-label">Gender</label>
            <div class="radio-group">
                <div>
                    <input type="radio" asp-for="Gender" checked name="Gender" value="0" /> Male
                </div>
                <div>
                    <input type="radio" asp-for="Gender" name="Gender" value="1" /> Female
                </div>
                <div>
                    <input type="radio" asp-for="Gender" name="Gender" value="2" /> Other
                </div>
            </div>
            <span asp-validation-for="Gender" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label class="control-label">Phone number</label>
            <input asp-for="PhoneNumber" class="form-control" oninput="validatePhoneNumber()" />
            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            <span id="phone-number-error" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label class="control-label">Email</label>
            <input type="email" asp-for="Email" class="form-control" id="Email" oninput="checkEmailExists()" />
            <span asp-validation-for="Email" class="text-danger"></span>
            <span id="email-error" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label class="control-label">Password</label>
            <input type="password" asp-for="Password" class="form-control" oninput="validatePassword()"/>
            <span asp-validation-for="Password" class="text-danger"></span>
            <span id="password-error" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label class="control-label">Avatar</label>
            <input asp-for="Avatar" class="form-control" />
        </div>
        <div class="form-group">
            <label class="control-label">Status</label>
            <input asp-for="Status" class="form-control" />
            <span asp-validation-for="Status" class="text-danger"></span>
        </div>
        <div class="form-group btn-sign-up">
            <input type="submit" value="Sign Up" class="btn btn-primary" />
        </div>
        <div class="login-link">
            <span>Already have an account? <a asp-action="Login" asp-controller="User">Login here</a></span>
        </div>
    </form>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function validatePhoneNumber() {
            const phoneNumber = document.getElementById("PhoneNumber").value;
            const phoneNumberError = document.getElementById("phone-number-error");
            const phoneRegex = /^0\d{9}$/;

            if (phoneNumber.length > 0) {
                if (!phoneRegex.test(phoneNumber)) {
                    phoneNumberError.textContent = 'Phone number must be 10 digits and start with 0';
                    return false;
                }

                phoneNumberError.textContent = '';
                return true;
            } else {
                phoneNumberError.textContent = '';
                return false;
            }
        }

        function checkEmailExists() {
            const email = document.getElementById('Email').value;
            const emailError = document.getElementById('email-error');

            if (email.length > 0) {
                $.ajax({
                    type: 'Get',
                    url: '@Url.Action("CheckEmailExist", "User")',
                    data: { email: email },
                    success: function (result) {
                        if (result) {
                            emailError.textContent = 'This email is already in use';
                        } else {
                            emailError.textContent = '';
                        }
                    }

                });
            } else {
                emailError.textContent = '';
            }

        }

        function validatePassword() {
            const password = document.getElementById("Password").value;
            const passwordError = document.getElementById("password-error");

            const lengthRegex = /.{8,}/;
            const upperCaseRegex = /[A-Z]/;
            const lowerCaseRegex = /[a-z]/;
            const numberRegex = /[0-9]/;
            const specialCharRegex = /[!#$%\^\&*\)\(+=._-]/;

            let errorMessage = [];
            if (!lengthRegex.test(password)) {
                errorMessage.push('Password must be at least 8 characters long');
            }
            if (!upperCaseRegex.test(password)) {
                errorMessage.push('at least one uppercase letter');
            }
            if (!lowerCaseRegex.test(password)) {
                errorMessage.push('at least one lowercase letter');
            }
            if (!numberRegex.test(password)) {
                errorMessage.push('at least one number');
            }
            if (!specialCharRegex.test(password)) {
                errorMessage.push('at least one special character');
            }

            passwordError.textContent = errorMessage.join(', ');

            return errorMessage.length === 0;
        }

        document.getElementById('sign-up-form').addEventListener('submit', function (event) {
            if (!validatePhoneNumber() || !validatePassword()) {
                event.preventDefault();
            }
        });


    </script>


}
